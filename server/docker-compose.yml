
version: '3.9'

services:
  ts-node-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./:/usr/src/app
      # - ./src:/usr/src/app/src
      # - ./prisma:/usr/src/app/prisma
      # - ./nodemon.json:/home/node/app/nodemon.json
    container_name: ts-node-server
    working_dir: /usr/src/app/
    ports:
      - '4000:4000'
    networks:
      - backend
    command: npm run dev
    env_file:
      - .env    
    depends_on: 
      - db
  db:
    container_name: db
    build: 
      context: .
      dockerfile: mysql.Dockerfile
    restart: always
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    env_file:
      - .env 
    networks:
      - backend
    # volumes:
    #   - ./mysql:/var/lib/mysql
    ports:
      - 3306:3306
  redis:
    restart: always
    container_name: redis
    image: redis:alpine
    command: ["redis-server", "/etc/redis/redis.conf"]
    ports:
      - 6379:6379
    volumes:
      - /data/redis-data:/data  
      - ./redis.conf:/etc/redis/redis.conf 
    networks:
      - backend         
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - backend

networks:
  backend:
