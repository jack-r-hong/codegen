# version: '3.9'

# services:
#   robot_server:
#     # image: server:latest
#     build: .
#     restart: always
#     container_name: robot_server
#     expose:
#       - '4000'
#     ports:
#       - '4000:4000'
#     networks:
#       - backend
#     working_dir: /usr/src/app
#     command: node ./dist/src/index.js
#     volumes:
#       - ./prisma:/home/node/app/prisma
#         # - ./nodemon.json:/home/node/app/nodemon.json    
#     env_file:
#       - .env      
#     depends_on: 
#       - db
#   db:
#     image: yobasystems/alpine-mariadb:latest
#     environment:
#       MYSQL_ROOT_PASSWORD: GFwV3cdgkHd9eGXA
#       MYSQL_DATABASE: auth
#       MYSQL_USER: user
#       MYSQL_PASSWORD: GFwV3cdgkHd9eGXA
#     expose:
#       - "3306"
#     # volumes:
#     #   - /data/example/mysql:/var/lib/mysql
#     restart: always

#     ports:
#       - 3306:3306
#     networks:
#       - backend 
#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8080:8080
#     networks:
#       - backend      


# networks:
#   backend:



# version: '3.9'

# services:
#   robot_server:
#     # image: server:latest
#     build: .
#     restart: always
#     container_name: robot_server
#     expose:
#       - '4000'
#     ports:
#       - '4000:4000'
#     networks:
#       - backend
#     working_dir: /usr/src/app
#     command: node ./dist/src/index.js
#     volumes:
#       - ./prisma:/home/node/app/prisma
#         # - ./nodemon.json:/home/node/app/nodemon.json    
#     env_file:
#       - .env    
#     depends_on: 
#       - db
#   db:
#     image: yobasystems/alpine-mariadb:latest
#     command: --default-authentication-plugin=mysql_native_password
#     restart: always
#     env_file:
#       - .env
#     networks:
#       - backend

#     volumes:
#       - ./mysql:/var/lib/mysql       
#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8080:8080
#     networks:
#       - backend

# networks:
#   backend:



version: '3.9'

services:
  # robot_server:
  #   build: .
  #   restart: always
  #   container_name: robot_server
  #   expose:
  #     - '4000'
  #   ports:
  #     - '4000:4000'
  #   networks:
  #     - backend
  #   working_dir: /home/node/app
  #   command: node ./dist/src/index.js
  #   # volumes:
  #     # - ./:/app
  #     # - ./src:/home/node/app/src
  #     # - ./prisma:/home/node/app/prisma
  #     #   - ./nodemon.json:/home/node/app/nodemon.json    
  #   env_file:
  #     - .env    
  #   depends_on: 
  #     - db

  ts-node-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    volumes:
      - ./:/usr/src/app
      # - ./src:/home/node/app/src
      # - ./prisma:/home/node/app/prisma
      # - ./nodemon.json:/home/node/app/nodemon.json
    container_name: ts-node-server
    expose:
      - '4000'
    ports:
      - '4000:4000'
    networks:
      - backend
    command: npm run dev
    env_file:
      - .env    
    depends_on: 
      - db
  db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    networks:
      - backend
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - 3306:3306
  # redis:
  #   restart: always
  #   container_name: redis
  #   image: redis:alpine
  #   command: ["redis-server", "/etc/redis/redis.conf"]
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - /data/redis-data:/data  
  #     - ./redis.conf:/etc/redis/redis.conf 
  #   networks:
  #     - backend         
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - backend

networks:
  backend:
