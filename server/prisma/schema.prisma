// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model BankAccount {
  account  Int  @map("account")                 
  code  Int  @map("code")                 
  id  Int @id @default(autoincrement()) @map("id")                 
  name  String  @map("name")                 
  user User? @relation(fields: [userId], references: [id])
  userId String @map("user_id") 
  
    // custom begin BankAccount

    // custom end BankAccount
}
model Transaction {
  account  String  @map("account")                 
  bonusPoint  Int  @map("bonus_point")                 
  bos  Int  @map("bos")                 
  createdAt  DateTime  @default(now()) @map("created_at")                 
  id  String @id @default(uuid()) @map("id")                 
  point  Int  @map("point")                 
  state  Int  @default(1)  @map("state")                 
  twd  Int  @map("twd")                 
  transactionRecive TransactionRecive[]
  user User? @relation(fields: [userId], references: [id])
  userId String @map("user_id") 
  
    // custom begin Transaction

    // custom end Transaction
}
model TransactionRecive {
  createdAt  DateTime  @default(now()) @map("created_at")                 
  id  String @id @default(uuid()) @map("id")                 
  transaction Transaction? @relation(fields: [transactionId], references: [id])
  transactionId String @map("transaction_id") 
  user User? @relation(fields: [userId], references: [id])
  userId String @map("user_id") 
  
    // custom begin TransactionRecive
  @@unique([userId, transactionId], name: "pair_id")

    // custom end TransactionRecive
}
model User {
  address  String?   @map("address")                 
  area  String?   @map("area")                 
  birthdate  String?   @map("birthdate")                 
  city  String?   @map("city")                 
  createdAt  DateTime  @default(now()) @map("created_at")                 
  email  String?   @map("email")                 
  id  String @id @default(uuid()) @map("id")                 
  name  String?   @map("name")                 
  password  String  @map("password")                 
  phone  String  @map("phone")                 
  phonePrefix  String  @map("phone_prefix")                 
  updatedAt  DateTime   @default(now()) @updatedAt @map("updated_at")                 
  userStatus  Int  @default(2)  @map("user_status")                 
  bankAccount BankAccount[]
  transaction Transaction[]
  transactionRecive TransactionRecive[]
  
    // custom begin User
  @@unique([phone, phonePrefix], name: "phone_all")

    // custom end User
}



