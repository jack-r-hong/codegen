{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "This is a sample Petstore server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version" : "1.0.0",
    "title" : "Swagger Petstore",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/saqwxz/test/1.0.0"
  }, {
    "url" : "https://petstore.swagger.io/v2"
  } ],
  "tags" : [ {
    "name" : "auth",
    "description" : "User auth"
  }, {
    "name" : "user",
    "description" : "Operations about user",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createOneUser",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/User"
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      }
    },
    "/users" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Creates list of users with given input array",
        "operationId" : "createManyUsers",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UserArray"
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      }
    },
    "/user/login" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Logs user into the system",
        "operationId" : "loginUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "$ref" : "#/components/schemas/User/properties/email"
                  },
                  "password" : {
                    "$ref" : "#/components/schemas/User/properties/password"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : {
              "X-Rate-Limit" : {
                "description" : "calls per hour allowed by the user",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "X-Expires-After" : {
                "description" : "date in UTC when token expires",
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              },
              "Set-Cookie" : {
                "description" : "date in UTC when token expires",
                "schema" : {
                  "type" : "string",
                  "format" : "jwt"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        }
      }
    },
    "/user/logout" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Logs out current logged in user session",
        "operationId" : "logoutUser",
        "responses" : {
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        }
      }
    },
    "/user/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user by user name",
        "operationId" : "readOneUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/User"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateOneUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/User"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/User"
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteOneUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      }
    },
    "/auths" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "Get auth",
        "operationId" : "readManyAuth",
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Auth"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      }
    },
    "/auth" : {
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Create auth",
        "operationId" : "createOneAuth",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Auth"
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Auth"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      }
    },
    "/auth/{id}" : {
      "put" : {
        "tags" : [ "auth" ],
        "summary" : "Update auth",
        "operationId" : "updateOneAuth",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Auth"
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Auth"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "auth" ],
        "summary" : "Get user by user name",
        "operationId" : "deleteOneAuth",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        },
        "security" : [ {
          "user_info" : [ ]
        } ]
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "description" : "database",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string",
            "uniqueItems" : true,
            "minLength" : 3,
            "maxLength" : 30
          },
          "email" : {
            "type" : "string",
            "format" : "email",
            "uniqueItems" : true
          },
          "password" : {
            "type" : "string",
            "format" : "password",
            "minLength" : 8,
            "maxLength" : 30
          },
          "phone" : {
            "type" : "string",
            "format" : "phone",
            "nullable" : true
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "userStatus" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "status map:\n * `1` - Normal\n * `2` - Unverified\n * `3` - Locking\n",
            "enum" : [ 1, 2, 3 ]
          },
          "authLevel" : {
            "$ref" : "#/components/schemas/Auth/properties/level"
          },
          "auth" : {
            "$ref" : "#/components/schemas/Auth"
          }
        }
      },
      "Auth" : {
        "type" : "object",
        "description" : "database",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "role" : {
            "type" : "integer",
            "format" : "int64"
          },
          "level" : {
            "type" : "integer",
            "format" : "int64",
            "uniqueItems" : true
          }
        }
      }
    },
    "requestBodies" : {
      "User" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "username" : {
                  "$ref" : "#/components/schemas/User/properties/username"
                },
                "email" : {
                  "$ref" : "#/components/schemas/User/properties/email"
                },
                "password" : {
                  "$ref" : "#/components/schemas/User/properties/password"
                },
                "phone" : {
                  "$ref" : "#/components/schemas/User/properties/phone"
                },
                "userStatus" : {
                  "$ref" : "#/components/schemas/User/properties/userStatus"
                },
                "authLevel" : {
                  "$ref" : "#/components/schemas/Auth/properties/level"
                }
              }
            }
          }
        },
        "description" : "List of user object",
        "required" : true
      },
      "UserArray" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "username" : {
                    "$ref" : "#/components/schemas/User/properties/username"
                  },
                  "email" : {
                    "$ref" : "#/components/schemas/User/properties/email"
                  },
                  "password" : {
                    "$ref" : "#/components/schemas/User/properties/password"
                  },
                  "phone" : {
                    "$ref" : "#/components/schemas/User/properties/phone"
                  },
                  "userStatus" : {
                    "$ref" : "#/components/schemas/User/properties/userStatus"
                  },
                  "authLevel" : {
                    "$ref" : "#/components/schemas/Auth/properties/level"
                  }
                }
              }
            }
          }
        },
        "description" : "List of user object",
        "required" : true
      },
      "Auth" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "role" : {
                  "$ref" : "#/components/schemas/Auth/properties/role"
                },
                "level" : {
                  "$ref" : "#/components/schemas/Auth/properties/level"
                }
              }
            }
          }
        },
        "description" : "List of user object",
        "required" : true
      }
    },
    "parameters" : {
      "updatedAt" : {
        "name" : "updatedAt",
        "in" : "query",
        "description" : "number of items to skip",
        "required" : true,
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "responses" : {
      "User" : {
        "description" : "Ok",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64"
                },
                "username" : {
                  "type" : "string"
                },
                "email" : {
                  "type" : "string",
                  "format" : "email"
                },
                "phone" : {
                  "type" : "string",
                  "format" : "phone",
                  "nullable" : true
                },
                "createdAt" : {
                  "type" : "string",
                  "format" : "date-time"
                },
                "updatedAt" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        }
      },
      "BadRequest" : {
        "description" : "Bad request"
      },
      "Unauthorized" : {
        "description" : "Unauthorized"
      },
      "Forbidden" : {
        "description" : "Forbidden"
      },
      "NotFound" : {
        "description" : "Not found"
      },
      "Conflict" : {
        "description" : "Conflict"
      }
    },
    "securitySchemes" : {
      "user_info" : {
        "type" : "apiKey",
        "name" : "USERINFO",
        "in" : "cookie"
      }
    }
  }
}